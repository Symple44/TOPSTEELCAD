MonitoringIntegration.ts:47 📊 Performance monitoring initialized for development environment
MonitoringIntegration.ts:48    Sample rate: 100%
MonitoringIntegration.ts:49    Max metrics: 50000
MonitoringIntegration.ts:56 💾 Geometry cache initialized
MonitoringIntegration.ts:57    Max size: 200MB
MonitoringIntegration.ts:58    Eviction policy: LRU
CutHandlerFactory.ts:113 ✅ Registered cut handler: PartialNotchHandler for types: NOTCH_PARTIAL, NOTCH_COMPOUND, CUT_WITH_NOTCHES
CutHandlerFactory.ts:113 ✅ Registered cut handler: NotchHandler for types: NOTCH_RECTANGULAR, NOTCH_CURVED, NOTCH_PARTIAL, NOTCH_COMPOUND
CutHandlerFactory.ts:113 ✅ Registered cut handler: EndCutHandler for types: END_STRAIGHT, END_ANGLE, END_COMPOUND, END_CHAMFER
CutHandlerFactory.ts:113 ✅ Registered cut handler: CompoundCutHandler for types: END_COMPOUND, NOTCH_COMPOUND
CutHandlerFactory.ts:113 ✅ Registered cut handler: CopingCutHandler for types: COPING_CUT, CONTOUR_CUT
CutHandlerFactory.ts:113 ✅ Registered cut handler: BevelCutHandler for types: BEVEL_CUT, END_CHAMFER
CutHandlerFactory.ts:113 ✅ Registered cut handler: ExteriorCutHandler for types: EXTERIOR_CUT, CONTOUR_CUT, COPING_CUT
CutHandlerFactory.ts:113 ✅ Registered cut handler: KontourHandler for types: CONTOUR_CUT, UNRESTRICTED_CONTOUR, EXTERIOR_CUT, INTERIOR_CUT
CutHandlerFactory.ts:113 ✅ Registered cut handler: PlateHandler for types: CONTOUR_CUT, THROUGH_CUT, PARTIAL_CUT
CutHandlerFactory.ts:113 ✅ Registered cut handler: InteriorCutHandler for types: INTERIOR_CUT, THROUGH_CUT, PARTIAL_CUT, SLOT_CUT
CutHandlerFactory.ts:113 ✅ Registered cut handler: AngleCutHandler for types: ANGLE_CUT, BEVEL_CUT, CHAMFER_CUT
CutHandlerFactory.ts:113 ✅ Registered cut handler: StraightCutHandler for types: STRAIGHT_CUT, NOTCH_RECTANGULAR
CutHandlerFactory.ts:113 ✅ Registered cut handler: TransverseCutHandler for types: STRAIGHT_CUT, ANGLE_CUT, THROUGH_CUT
CutHandlerFactory.ts:113 ✅ Registered cut handler: SlotCutHandler for types: SLOT_CUT
CutHandlerFactory.ts:113 ✅ Registered cut handler: LegacyFallbackHandler for types: STRAIGHT_CUT, ANGLE_CUT, END_STRAIGHT, END_ANGLE, END_COMPOUND, END_CHAMFER, NOTCH_RECTANGULAR, NOTCH_CURVED, NOTCH_PARTIAL, NOTCH_COMPOUND, INTERIOR_CUT, EXTERIOR_CUT, THROUGH_CUT, PARTIAL_CUT, BEVEL_CUT, CHAMFER_CUT, CONTOUR_CUT, COPING_CUT, SLOT_CUT, CUT_WITH_NOTCHES, UNRESTRICTED_CONTOUR
CutHandlerFactory.ts:145 📌 Set default cut handler: LegacyFallbackHandler
CutHandlerFactory.ts:81 ✅ Registered 15 built-in cut handlers
CutHandlerFactory.ts:52 🚀 Cut Handler Factory initialized with production monitoring
CutProcessorMigrated.ts:37 🚀 CutProcessorMigrated initialized in mode: new
logger.ts:396 🔧 Initialisation du logger...
logger.ts:422 ✅ Logger configuré. Utilisez window.topsteelLogger pour accéder aux logs.
logger.ts:423   - .download() pour télécharger les logs
logger.ts:424   - .show() pour afficher les logs
logger.ts:425   - .clear() pour vider les logs
logger.ts:426   - .enableConsole(true) pour activer la sortie console
CameraController.ts:734 📐 Updated camera limits: minDist=100, maxDist=10000
demo.tsx:160 Demo montée, pas de chargement asynchrone
ControlsManager.ts:669 🔍 Limites zoom: 500mm ↔ 15000mm
vite.svg:1  GET http://localhost:5173/vite.svg 404 (Not Found)
CSGWorkerManager.ts:481 🔄 Shutting down CSG Worker Manager...
CSGWorkerManager.ts:498 ✅ CSG Worker Manager shut down
CSGWorkerManager.ts:89 WebWorkers disabled in configuration
ProfessionalViewer.tsx:73 🔄 Initialisation avec initialElements: 0
ProfessionalViewer.tsx:81 📊 allElements a changé: 0 éléments
ProfessionalViewer.tsx:82 📊 Contenu: []
CameraController.ts:734 📐 Updated camera limits: minDist=100, maxDist=10000
ProfessionalViewer.tsx:1176 🎯 Selected features updated in ProfessionalViewer: []
ProfessionalViewer.tsx:235 ✅ Using FeatureOutlineRenderer from SceneManager
ControlsManager.ts:669 🔍 Limites zoom: 500mm ↔ 15000mm
ProfessionalViewer.tsx:407 🎮 Contrôles de caméra activés
ProfessionalViewer.tsx:959 📁 Import en cours: M1002.nc
 [Pipeline] Processing context initialized {file: undefined, fileSize: undefined, options: Array(2)}
 [Pipeline] Starting pipeline execution: dstv-import-pipeline {stageCount: 5, middlewareCount: 0}
 [dstv-lexical-analysis] Starting stage: dstv-lexical-analysis {stageIndex: 1, totalStages: 5}
 [dstv-lexical-analysis] Starting stage: dstv-lexical-analysis {description: 'DSTV Lexical Analysis - Tokenizes DSTV file according to official grammar', estimatedDuration: '100ms'}
 [dstv-lexical-analysis] [dstv-lexical-analysis] Starting lexical analysis {fileSize: 971, contentLength: 971}
 [dstv-lexical-analysis] [dstv-lexical-analysis] Lexical analysis completed {tokensGenerated: 177, duration: '1.10ms', blocksDetected: 7}
 [dstv-lexical-analysis] Completed stage: dstv-lexical-analysis {duration: '1.50ms', outputType: 'Object'}
 [dstv-lexical-analysis] Completed stage: dstv-lexical-analysis {duration: '1.90ms'}
 [dstv-syntax-analysis] Starting stage: dstv-syntax-analysis {stageIndex: 2, totalStages: 5}
 [dstv-syntax-analysis] Starting stage: dstv-syntax-analysis {description: 'DSTV Syntax Analysis - Builds AST from tokens according to DSTV grammar', estimatedDuration: '200ms'}
 [dstv-syntax-analysis] [dstv-syntax-analysis] Starting syntax analysis {totalTokens: 177, blocksDetected: 7}
 🚀 parseBlock called, headerToken: ST
 🎯 parseBlockData called with blockType="ST", DSTVBlockType.ST="ST", equal=true
 🏭 Getting factory...
 🏭 Getting parser for ST...
 🏭 Got parser for ST, rawData: (24) ['-', '001', 'M1002', 'M1002', 'S275JR', '1', 'UB254x146x31', 'I', '1912.15', '251.40', '146.10', '8.60', '6.00', '7.60', '31.16', '1.08', '0.00', '0.00', '0.00', '0.00', '-', '-', '-', '-']
 🔍 ST Block raw input:
   [0]: "-"
   [1]: "001"
   [2]: "M1002"
   [3]: "M1002"
   [4]: "S275JR"
   [5]: "1"
   [6]: "UB254x146x31"
   [7]: "I"
   [8]: "1912.15"
   [9]: "251.40"
   [10]: "146.10"
   [11]: "8.60"
   [12]: "6.00"
   [13]: "7.60"
   [14]: "31.16"
 📐 Parsing dimensions from index 8 for type I_PROFILE
   Raw values: [8]="1912.15", [9]="251.40", [10]="146.10"
 🎯 Detected profileType: "I_PROFILE" for profile "UB254x146x31"
 📊 Parsed dimensions: L=1912.15, H=251.4, W=146.1
 🚀 parseBlock called, headerToken: AK
 🎯 parseBlockData called with blockType="AK", DSTVBlockType.ST="ST", equal=false
 🏭 Getting factory...
 🏭 Getting parser for AK...
 🏭 Got parser for AK, rawData: (20) ['o', '1842.10', '0.00', '0.00', 'o', '0.00', '0.00', '0.00', 'o', '0.00', '146.10', '0.00', 'o', '1842.10', '146.10', '0.00', 'o', '1842.10', '0.00', '0.00']
 🔍 AKBlockParser - Input (20 fields): (12) ['o', '1842.10', '0.00', '0.00', 'o', '0.00', '0.00', '0.00', 'o', '0.00', '146.10', '0.00']
 🔍 AKBlockParser - ALL Input: (20) ['o', '1842.10', '0.00', '0.00', 'o', '0.00', '0.00', '0.00', 'o', '0.00', '146.10', '0.00', 'o', '1842.10', '146.10', '0.00', 'o', '1842.10', '0.00', '0.00']
 🔍 isLegacyFaceIndicatorFormat - Checking 20 fields
 🔍 First field: "o", length: 1
 🔍 Format legacy détecté: première lettre = o
 🔍 AK Format: LEGACY with face indicators
 🔍 AK Format detection: faces=5, numeric=15, zeros=10, total=20
 🔍 Detected GROUPED_4 format (face ratio: 5*4 ≈ 20)
 🔄 AK Block: mapping face indicator 'o' → top_flange
 ✅ AK Point parsed (GROUPED): [1842.1, 0] from fields [face=o, x=1842.10, y=0.00]
 🔄 AK Block: mapping face indicator 'o' → top_flange
 ✅ AK Point parsed (GROUPED): [0, 0] from fields [face=o, x=0.00, y=0.00]
 🔄 AK Block: mapping face indicator 'o' → top_flange
 ✅ AK Point parsed (GROUPED): [0, 146.1] from fields [face=o, x=0.00, y=146.10]
 🔄 AK Block: mapping face indicator 'o' → top_flange
 ✅ AK Point parsed (GROUPED): [1842.1, 146.1] from fields [face=o, x=1842.10, y=146.10]
 🔄 AK Block: mapping face indicator 'o' → top_flange
 ✅ AK Point parsed (GROUPED): [1842.1, 0] from fields [face=o, x=1842.10, y=0.00]
 🔍 AK Legacy parsing result: 5 points, face=top_flange
 🚀 parseBlock called, headerToken: BO
 🎯 parseBlockData called with blockType="BO", DSTVBlockType.ST="ST", equal=false
 🏭 Getting factory...
 🏭 Getting parser for BO...
 🏭 Got parser for BO, rawData: (10) ['v', '1857.15', '163.20', '22.00', '0.00', 'v', '1857.15', '88.20', '22.00', '0.00']
 🔧 BOBlockParser.process called with 10 lines: (10) ['v', '1857.15', '163.20', '22.00', '0.00', 'v', '1857.15', '88.20', '22.00', '0.00']
 🔍 BO format detected: LEGACY
 🔍 BO parseLegacyFormat called with 10 fields
   First few fields: (5) ['v', '1857.15', '163.20', '22.00', '0.00']
 🔍 Parsed hole from separated format: face=v, x=1857.15, y=163.2, d=22
 🔍 Parsed hole from separated format: face=v, x=1857.15, y=88.2, d=22
 🔍 Legacy format parsed 2 holes
 📦 BO normalization: wrapping 2 holes in { holes: [...] } structure
 🚀 parseBlock called, headerToken: SI
 🎯 parseBlockData called with blockType="SI", DSTVBlockType.ST="ST", equal=false
 🏭 Getting factory...
 🏭 Getting parser for SI...
 🏭 Got parser for SI, rawData: (6) ['v', '2.00', '2.00', '0.00', '10', '1002']
 🎯 DSTV face mapping: 'v' → 'web'
 🚀 parseBlock called, headerToken: AK
 🎯 parseBlockData called with blockType="AK", DSTVBlockType.ST="ST", equal=false
 🏭 Getting factory...
 🏭 Getting parser for AK...
 🏭 Got parser for AK, rawData: (36) ['v', '1912.15', '18.60', '0.00', 'v', '1912.15', '232.80', '0.00', 'v', '1842.10', '232.80', '0.00', 'v', '1842.10', '251.40', '0.00', 'v', '0.00', '251.40', '0.00', 'v', '0.00', '0.00', '0.00', 'v', '1842.10', '0.00', '0.00', 'v', '1842.10', '18.60', '0.00', 'v', '1912.15', '18.60', '0.00']
 🔍 AKBlockParser - Input (36 fields): (12) ['v', '1912.15', '18.60', '0.00', 'v', '1912.15', '232.80', '0.00', 'v', '1842.10', '232.80', '0.00']
 🔍 AKBlockParser - ALL Input: (36) ['v', '1912.15', '18.60', '0.00', 'v', '1912.15', '232.80', '0.00', 'v', '1842.10', '232.80', '0.00', 'v', '1842.10', '251.40', '0.00', 'v', '0.00', '251.40', '0.00', 'v', '0.00', '0.00', '0.00', 'v', '1842.10', '0.00', '0.00', 'v', '1842.10', '18.60', '0.00', 'v', '1912.15', '18.60', '0.00']
 🔍 isLegacyFaceIndicatorFormat - Checking 36 fields
 🔍 First field: "v", length: 1
 🔍 Format legacy détecté: première lettre = v
 🔍 AK Format: LEGACY with face indicators
 🔍 AK Format detection: faces=9, numeric=27, zeros=13, total=36
 🔍 Detected GROUPED_4 format (face ratio: 9*4 ≈ 36)
 🔄 AK Block: mapping face indicator 'v' → web
 ✅ AK Point parsed (GROUPED): [1912.15, 18.6] from fields [face=v, x=1912.15, y=18.60]
 🔄 AK Block: mapping face indicator 'v' → web
 ✅ AK Point parsed (GROUPED): [1912.15, 232.8] from fields [face=v, x=1912.15, y=232.80]
 🔄 AK Block: mapping face indicator 'v' → web
 ✅ AK Point parsed (GROUPED): [1842.1, 232.8] from fields [face=v, x=1842.10, y=232.80]
 🔄 AK Block: mapping face indicator 'v' → web
 ✅ AK Point parsed (GROUPED): [1842.1, 251.4] from fields [face=v, x=1842.10, y=251.40]
 🔄 AK Block: mapping face indicator 'v' → web
 ✅ AK Point parsed (GROUPED): [0, 251.4] from fields [face=v, x=0.00, y=251.40]
 🔄 AK Block: mapping face indicator 'v' → web
 ✅ AK Point parsed (GROUPED): [0, 0] from fields [face=v, x=0.00, y=0.00]
 🔄 AK Block: mapping face indicator 'v' → web
 ✅ AK Point parsed (GROUPED): [1842.1, 0] from fields [face=v, x=1842.10, y=0.00]
 🔄 AK Block: mapping face indicator 'v' → web
 ✅ AK Point parsed (GROUPED): [1842.1, 18.6] from fields [face=v, x=1842.10, y=18.60]
 🔄 AK Block: mapping face indicator 'v' → web
 ✅ AK Point parsed (GROUPED): [1912.15, 18.6] from fields [face=v, x=1912.15, y=18.60]
 🔍 AK Legacy parsing result: 9 points, face=web
 🚀 parseBlock called, headerToken: AK
 🎯 parseBlockData called with blockType="AK", DSTVBlockType.ST="ST", equal=false
 🏭 Getting factory...
 🏭 Getting parser for AK...
 🏭 Got parser for AK, rawData: (20) ['u', '1842.10', '146.10', '0.00', 'u', '0.00', '146.10', '0.00', 'u', '0.00', '0.00', '0.00', 'u', '1842.10', '0.00', '0.00', 'u', '1842.10', '146.10', '0.00']
 🔍 AKBlockParser - Input (20 fields): (12) ['u', '1842.10', '146.10', '0.00', 'u', '0.00', '146.10', '0.00', 'u', '0.00', '0.00', '0.00']
 🔍 AKBlockParser - ALL Input: (20) ['u', '1842.10', '146.10', '0.00', 'u', '0.00', '146.10', '0.00', 'u', '0.00', '0.00', '0.00', 'u', '1842.10', '0.00', '0.00', 'u', '1842.10', '146.10', '0.00']
 🔍 isLegacyFaceIndicatorFormat - Checking 20 fields
 🔍 First field: "u", length: 1
 🔍 Format legacy détecté: première lettre = u
 🔍 AK Format: LEGACY with face indicators
 🔍 AK Format detection: faces=5, numeric=15, zeros=9, total=20
 🔍 Detected GROUPED_4 format (face ratio: 5*4 ≈ 20)
 🔄 AK Block: mapping face indicator 'u' → bottom_flange
 ✅ AK Point parsed (GROUPED): [1842.1, 146.1] from fields [face=u, x=1842.10, y=146.10]
 🔄 AK Block: mapping face indicator 'u' → bottom_flange
 ✅ AK Point parsed (GROUPED): [0, 146.1] from fields [face=u, x=0.00, y=146.10]
 🔄 AK Block: mapping face indicator 'u' → bottom_flange
 ✅ AK Point parsed (GROUPED): [0, 0] from fields [face=u, x=0.00, y=0.00]
 🔄 AK Block: mapping face indicator 'u' → bottom_flange
 ✅ AK Point parsed (GROUPED): [1842.1, 0] from fields [face=u, x=1842.10, y=0.00]
 🔄 AK Block: mapping face indicator 'u' → bottom_flange
 ✅ AK Point parsed (GROUPED): [1842.1, 146.1] from fields [face=u, x=1842.10, y=146.10]
 🔍 AK Legacy parsing result: 5 points, face=bottom_flange
 🚀 parseBlock called, headerToken: EN
 🎯 parseBlockData called with blockType="EN", DSTVBlockType.ST="ST", equal=false
 🏭 Getting factory...
 🏭 Getting parser for EN...
 🏭 Got parser for EN, rawData: []
 [dstv-syntax-analysis] [dstv-syntax-analysis] Syntax analysis completed {blocksParsed: 7, duration: '8.40ms', profile: 'UB254x146x31'}
 [dstv-syntax-analysis] Completed stage: dstv-syntax-analysis {duration: '8.60ms', outputType: 'Object'}
 [dstv-syntax-analysis] Completed stage: dstv-syntax-analysis {duration: '8.90ms'}
 [dstv-semantic-validation] Starting stage: dstv-semantic-validation {stageIndex: 3, totalStages: 5}
 [dstv-semantic-validation] Starting stage: dstv-semantic-validation {description: 'DSTV Semantic Validation - Validates DSTV data against business rules and standards', estimatedDuration: '150ms'}
 [dstv-semantic-validation] [dstv-semantic-validation] Starting semantic validation {totalBlocks: 7, profile: 'UB254x146x31'}
 [dstv-semantic-validation] File contains both geometry and marking blocks - good practice 
 [dstv-semantic-validation] [dstv-semantic-validation] Semantic validation completed {validBlocks: 7, totalErrors: 1, totalWarnings: 2, conformityScore: '96.6%', duration: '1.50ms'}
 [dstv-semantic-validation] Completed stage: dstv-semantic-validation {duration: '1.90ms', outputType: 'Object'}
 [dstv-semantic-validation] Completed stage: dstv-semantic-validation {duration: '2.20ms'}
 [dstv-normalization] Starting stage: dstv-normalization {stageIndex: 4, totalStages: 5}
 [dstv-normalization] Starting stage: dstv-normalization {description: 'DSTV Normalization - Converts DSTV data to normalized internal format', estimatedDuration: '100ms'}
 [dstv-normalization] [dstv-normalization] Starting normalization {validBlocks: 7, conformityScore: '96.6%'}
 📦 ST Block data received: {
  "orderNumber": "",
  "drawingNumber": "001",
  "phaseNumber": "M1002",
  "pieceNumber": "M1002",
  "steelGrade": "S275JR",
  "quantity": 1,
  "profileName": "UB254x146x31",
  "profileType": "I_PROFILE",
  "length": 1912.15,
  "height": 251.4,
  "width": 146.1,
  "webThickness": 8.6,
  "flangeThickness": 6,
  "weight": 7.6,
  "paintingSurface": 31.16,
  "radius": 1.08,
  "blockType": "ST"
}
 🔍🔍🔍 extractCrossSectionFromSTData - profileType: "I_PROFILE", profileName: "UB254x146x31"
   Raw data fields: height=251.4, width=146.1, profileHeight=undefined, profileWidth=undefined
   webThickness=8.6, flangeThickness=6
 Extracted standard dimensions from ST data: height=251.4, width=146.1, webThickness=8.6, flangeThickness=6
 📐 Profile type mapping: DSTV="I_PROFILE" → Internal="I_PROFILE"
 📐 Profile dimensions set for coordinate conversion: {length: 1912.15, height: 251.4, width: 146.1}
 🔍 Profile type detection: name="UB254x146x31", type="I_PROFILE"
 ✅ Detected I_PROFILE from British/American standard: UB254x146x31
 🔍 Mapping profile type: profileName="UB254x146x31", profileType="I_PROFILE" → mappedType="I_PROFILE"
   🔍 AK Processing - Current profile type: I_PROFILE
   🔍 AK Processing - Profile dimensions: {length: 1912.15, height: 251.4, width: 146.1}
   🔍 Analyzing contour type for 5 points on face top_flange
   🔍 Analyzing 5 points on face top_flange, profile length=1912.15mm, isTube=false
   📏 Contour bounds: X[0.0, 1842.1] = 1842.1mm
   📏 Contour height: Y[0.0, 146.1] = 146.1mm
   🔧 Analysis: complex=false, flange=false, fullLength=false
   🔧 ContourLength=1842.1mm vs ProfileLength=1912.15mm
   🔍 Contour type result: CONTOUR
 🔴 DSTVOriginTransform: profileType=I_PROFILE, face=top_flange, Y=73.05, height=251.4
 🔴 I-PROFILE: Converting Y from 73.05 to -52.650000000000006 (height=251.4, face=top_flange)
 🔴 DSTVOriginTransform: profileType=I_PROFILE, face=v, Y=163.2, height=251.4
 🔴 I-PROFILE: Converting Y from 163.2 to 37.499999999999986 (height=251.4, face=v)
   📐 BO normalization: hole.depth=0, normalized depth=0
 🔴 DSTVOriginTransform: profileType=I_PROFILE, face=v, Y=88.2, height=251.4
 🔴 I-PROFILE: Converting Y from 88.2 to -37.5 (height=251.4, face=v)
   📐 BO normalization: hole.depth=0, normalized depth=0
 🎯 normalizeSIBlock - Input data: {x: 2, y: 2, text: '1002', markingMethod: 'engrave', face: 'web', …}
 🎯 Face value: web Type: string
 📍 Placing marking on top flange surface: X=20mm (text width≈24mm), Y=125.7mm, Z=2mm
 🎯 UNIFIED coordinate conversion complete: {originalDSTV: {…}, standardCoords: {…}, originalFace: 'web', standardFace: 'top_flange', positionService: 'SUCCESS'}
   🔍 AK Processing - Current profile type: I_PROFILE
   🔍 AK Processing - Profile dimensions: {length: 1912.15, height: 251.4, width: 146.1}
   🔍 Analyzing contour type for 9 points on face web
   🔍 Analyzing 9 points on face web, profile length=1912.15mm, isTube=false
   📏 Contour bounds: X[0.0, 1912.2] = 1912.2mm
   📏 Contour height: Y[0.0, 251.4] = 251.4mm
   🔧 Analysis: complex=true, flange=false, fullLength=true
   🔧 ContourLength=1912.2mm vs ProfileLength=1912.15mm
   🔧 Web cut with notches detected (M1002 pattern): Points=9, Face=web
   🔧 Contour: 1912.2x251.4mm
   🔍 Contour type result: CUT_WITH_NOTCHES
   🔧 AK block detected as cut with partial notches (M1002 pattern)
DSTVCoordinateAdapter.ts:73 🔴 DSTVOriginTransform: profileType=I_PROFILE, face=web, Y=113.80000000000001, height=251.4
DSTVCoordinateAdapter.ts:93 🔴 I-PROFILE: Converting Y from 113.80000000000001 to -11.899999999999991 (height=251.4, face=web)
DSTVNormalizationStage.ts:677   🔍 AK Processing - Current profile type: I_PROFILE
DSTVNormalizationStage.ts:678   🔍 AK Processing - Profile dimensions: {length: 1912.15, height: 251.4, width: 146.1}
DSTVNormalizationStage.ts:696   🔍 Analyzing contour type for 5 points on face bottom_flange
DSTVNormalizationStage.ts:2623   🔍 Analyzing 5 points on face bottom_flange, profile length=1912.15mm, isTube=false
DSTVNormalizationStage.ts:2643   📏 Contour bounds: X[0.0, 1842.1] = 1842.1mm
DSTVNormalizationStage.ts:2644   📏 Contour height: Y[0.0, 146.1] = 146.1mm
DSTVNormalizationStage.ts:2679   🔧 Analysis: complex=false, flange=false, fullLength=false
DSTVNormalizationStage.ts:2680   🔧 ContourLength=1842.1mm vs ProfileLength=1912.15mm
DSTVNormalizationStage.ts:698   🔍 Contour type result: CONTOUR
DSTVCoordinateAdapter.ts:73 🔴 DSTVOriginTransform: profileType=I_PROFILE, face=bottom_flange, Y=73.05, height=251.4
DSTVCoordinateAdapter.ts:93 🔴 I-PROFILE: Converting Y from 73.05 to -52.650000000000006 (height=251.4, face=bottom_flange)
ProcessingContext.ts:503 [dstv-normalization] [dstv-normalization] Normalization completed {featuresNormalized: 6, profileName: 'UB254x146x31', duration: '6.70ms'}
ProcessingContext.ts:503 [dstv-normalization] Completed stage: dstv-normalization {duration: '7.00ms', outputType: 'Object'}
ProcessingContext.ts:503 [dstv-normalization] Completed stage: dstv-normalization {duration: '7.20ms'}
ProcessingContext.ts:503 [dstv-scene-building] Starting stage: dstv-scene-building {stageIndex: 5, totalStages: 5}
ProcessingContext.ts:503 [dstv-scene-building] Starting stage: dstv-scene-building {description: 'DSTV Scene Building - Builds final 3D scene from normalized DSTV data', estimatedDuration: '200ms'}
ProcessingContext.ts:503 [dstv-scene-building] [dstv-scene-building] Starting scene building {profiles: 1, totalFeatures: 6}
DSTVSceneBuildingStage.ts:169 🚨 buildProfileElements - profile type: I_PROFILE name: UB254x146x31
GeometryBridge.ts:55 📐 GeometryBridge.createProfileGeometry - profile: {id: 'unknown_001_M1002', type: 'I_PROFILE', name: 'UB254x146x31', dimensions: {…}}
GeometryBridge.ts:62 🔧 GeometryBridge: Available generators: (10) ['I_PROFILE', 'U_PROFILE', 'L_PROFILE', 'T_PROFILE', 'C_PROFILE', 'Z_PROFILE', 'TUBE_RECT', 'TUBE_ROUND', 'PLATE', 'FLAT_BAR']
GeometryBridge.ts:63 🎯 GeometryBridge: Looking for generator for type: I_PROFILE
GeometryBridge.ts:81 🏭 GeometryBridge: Using generator IProfileGenerator for profile I_PROFILE
GeometryBridge.ts:85 📝 GeometryBridge: Prepared params: {length: 1912.15, height: 251.4, width: 146.1, profileType: 'I_PROFILE', profileName: 'UB254x146x31', …}
GeometryBridge.ts:95 🔧 Calling IProfileGenerator with dimensions: {height: 251.4, width: 146.1, profileType: 'I_PROFILE', profileName: 'UB254x146x31', webThickness: 8.6, …} and length: 1912.15
GeometryBridge.ts:97 ✅ GeometryBridge: Generator returned geometry with vertices: 132
DSTVSceneBuildingStage.ts:500 Created I_PROFILE geometry using existing generator
DSTVSceneBuildingStage.ts:246 🔍 SceneBuildingStage: Geometry state before applying features: {profileId: 'unknown_001_M1002', isNull: false, isUndefined: false, hasAttributes: true, hasPositions: true, …}
DSTVSceneBuildingStage.ts:265 📦 Applying 6 features to profile unknown_001_M1002 (sorted by DSTV priority):
DSTVSceneBuildingStage.ts:268   Feature 0: id=dstv_contour_outer_1, type=contour, priority=1000, block=AK
DSTVSceneBuildingStage.ts:268   Feature 1: id=dstv_contour_outer_6, type=contour, priority=1000, block=AK
DSTVSceneBuildingStage.ts:268   Feature 2: id=dstv_cut-with-notches_5, type=cut_with_notches, priority=900, block=AK
DSTVSceneBuildingStage.ts:268   Feature 3: id=dstv_hole_2, type=hole, priority=500, block=BO
DSTVSceneBuildingStage.ts:268   Feature 4: id=dstv_hole_3, type=hole, priority=500, block=BO
DSTVSceneBuildingStage.ts:268   Feature 5: id=dstv_marking_4, type=marking, priority=100, block=SI
DSTVSceneBuildingStage.ts:272 ✅ SceneBuildingStage: Starting feature application with 132 vertices
ProcessorBridge.ts:655 🎯 Processing 6 features in 4 priority groups
ProcessorBridge.ts:659 
📦 Processing priority group 1000 (AK): 2 features
ProcessorBridge.ts:674   🔧 Processing contour feature dstv_contour_outer_1
ProcessorBridge.ts:61 🔧 ProcessorBridge: Applying normalized feature dstv_contour_outer_1 of type contour
ProcessorBridge.ts:64 🔍 ProcessorBridge: Input geometry state: {isNull: false, isUndefined: false, hasAttributes: true, hasPositions: true, vertexCount: 132, …}
ProcessorBridge.ts:347 🚀 NEW ProcessorBridge.convertToProcessorFeature called for dstv_contour_outer_1
ProcessorBridge.ts:383 🔄 Converting 5 points for contour dstv_contour_outer_1
ProcessorBridge.ts:384 🔄 Input points type: object First point: (2) [1842.1, 0]
ProcessorBridge.ts:400 ✅ Converted points result: (5) [Array(2), Array(2), Array(2), Array(2), Array(2)]
ProcessorBridge.ts:441 🔄 ProcessorBridge - Feature mapping: {featureId: 'dstv_contour_outer_1', featureType: 'contour', inputCoords: {…}, outputPosition: {…}, rawFace: 'top_flange', …}
ProcessorBridge.ts:491   → TOP/BOTTOM_FLANGE face: no rotation - hole perpendicular to flange
ProcessorBridge.ts:99 ✅ Converted feature dstv_contour_outer_1 type contour, using processor factory...
ProcessorBridge.ts:100 📋 Feature details: {type: 'contour', id: 'dstv_contour_outer_1', position: _Vector3, rotation: _Euler, parameters: {…}}
FeatureProcessorFactory.ts:127 🏭 FeatureProcessorFactory.process called for type: contour, id: dstv_contour_outer_1
FeatureProcessorFactory.ts:139 ✅ Found processor for contour, calling process...
ContourProcessor.ts:29 🎯 ContourProcessor.process called for feature dstv_contour_outer_1
ContourProcessor.ts:30   - Feature params: {points: Array(5), closed: true, contourType: 'outer', interpolation: 'linear'}
ContourProcessor.ts:31   - Element: unknown_001_M1002 {length: 1912.15, width: 146.1, height: 251.4, thickness: 8.6, flangeThickness: 6}
ContourProcessor.ts:55   - Validation errors: []
ContourProcessor.ts:63 ✅ Validation passed for dstv_contour_outer_1
ContourProcessor.ts:68   - Effective depth: 12.899999999999999mm
ContourProcessor.ts:69   - Creating contour geometry with 5 points...
ContourProcessor.ts:156 ✅ Contour geometry created successfully
ContourProcessor.ts:166⚠️ feature.position seems incorrect (distance: 929.59mm), attempting correction
overrideMethod @ hook.js:608
process @ ContourProcessor.ts:166
process @ FeatureProcessorFactory.ts:142
applyNormalizedFeature @ ProcessorBridge.ts:109
applyFeatureBatch @ ProcessorBridge.ts:675
buildProfileElement @ DSTVSceneBuildingStage.ts:274
await in buildProfileElement
buildProfileElements @ DSTVSceneBuildingStage.ts:172
process @ DSTVSceneBuildingStage.ts:96
await in process
(anonymous) @ ProcessingPipeline.ts:294
executeWithRetry @ ProcessingPipeline.ts:362
executeStage @ ProcessingPipeline.ts:292
await in executeStage
execute @ ProcessingPipeline.ts:171
await in execute
execute @ DSTVImportPipeline.ts:158
import @ DSTVImportAdapter.ts:33
await in import
importDSTVFile @ DSTVImportAdapter.ts:97
await in importDSTVFile
importFile @ DSTVImportAdapter.ts:267
importDSTV @ FileImporter.ts:179
await in importDSTV
importFile @ FileImporter.ts:82
handleImport @ ProfessionalViewer.tsx:960
handleFileChange @ ImportExportTools.tsx:52
executeDispatch @ react-dom_client.js?v=7152ab34:11940
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
processDispatchQueue @ react-dom_client.js?v=7152ab34:11976
(anonymous) @ react-dom_client.js?v=7152ab34:12396
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2701
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
<input>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
ImportExportTools @ ImportExportTools.tsx:69
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<ImportExportTools>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
Toolbar @ Toolbar.tsx:107
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<Toolbar>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
ProfessionalViewer @ ProfessionalViewer.tsx:1547
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<ProfessionalViewer>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
DemoApp @ demo.tsx:393
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<DemoApp>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
(anonymous) @ demo.tsx:431
ContourProcessor.ts:187   - Using corrected position: _Vector3 {x: 0, y: 0, z: 0}
ContourProcessor.ts:192   - Contour positioned using feature.position: _Vector3 {x: 0, y: 0, z: 0}
ContourProcessor.ts:214   - Contour positioned at: _Vector3 {x: 0, y: 0, z: 0}
ContourProcessor.ts:215   - Contour rotation: x=0.0°, y=0.0°, z=0.0°
ContourProcessor.ts:220   - Base geometry vertices: 132
ContourProcessor.ts:234   - Performing CSG SUBTRACTION...
ContourProcessor.ts:237 🔍 CSG Debug before operation:
ContourProcessor.ts:238   - Base geometry vertices: 132
ContourProcessor.ts:239   - Base geometry boundingBox: Box3 {isBox3: true, min: _Vector3, max: _Vector3}
ContourProcessor.ts:240   - Contour geometry vertices: 36
ContourProcessor.ts:241   - Contour geometry boundingBox: null
ContourProcessor.ts:242   - Base brush position: _Vector3 {x: 0, y: 0, z: 0}
ContourProcessor.ts:243   - Contour brush position: _Vector3 {x: 0, y: 0, z: 0}
ContourProcessor.ts:244   - Distance between brushes: 0
ContourProcessor.ts:261   - Base box after translation: Box3 {isBox3: true, min: _Vector3, max: _Vector3}
ContourProcessor.ts:262   - Contour box after translation: Box3 {isBox3: true, min: _Vector3, max: _Vector3}
ContourProcessor.ts:264   - Boxes intersect: true
ContourProcessor.ts:310   - CSG operation completed
ContourProcessor.ts:321   - Result geometry vertices: 231
ContourProcessor.ts:322   - Vertices changed: 132 -> 231
ContourProcessor.ts:326 ✅ Returning modified geometry for dstv_contour_outer_1
 📊 Processing result for dstv_contour_outer_1: {success: true, hasGeometry: true, error: undefined, warning: undefined}
 ✅ ProcessorBridge: Feature processed successfully, returning new geometry with 231 vertices
   🔧 Processing contour feature dstv_contour_outer_6
 🔧 ProcessorBridge: Applying normalized feature dstv_contour_outer_6 of type contour
 🔍 ProcessorBridge: Input geometry state: {isNull: false, isUndefined: false, hasAttributes: true, hasPositions: true, vertexCount: 231, …}
 🚀 NEW ProcessorBridge.convertToProcessorFeature called for dstv_contour_outer_6
 🔄 Converting 5 points for contour dstv_contour_outer_6
 🔄 Input points type: object First point: (2) [1842.1, 146.1]
 ✅ Converted points result: (5) [Array(2), Array(2), Array(2), Array(2), Array(2)]
 🔄 ProcessorBridge - Feature mapping: {featureId: 'dstv_contour_outer_6', featureType: 'contour', inputCoords: {…}, outputPosition: {…}, rawFace: 'bottom_flange', …}
   → TOP/BOTTOM_FLANGE face: no rotation - hole perpendicular to flange
 ✅ Converted feature dstv_contour_outer_6 type contour, using processor factory...
 📋 Feature details: {type: 'contour', id: 'dstv_contour_outer_6', position: _Vector3, rotation: _Euler, parameters: {…}}
 🏭 FeatureProcessorFactory.process called for type: contour, id: dstv_contour_outer_6
 ✅ Found processor for contour, calling process...
 🎯 ContourProcessor.process called for feature dstv_contour_outer_6
   - Feature params: {points: Array(5), closed: true, contourType: 'outer', interpolation: 'linear'}
   - Element: unknown_001_M1002 {length: 1912.15, width: 146.1, height: 251.4, thickness: 8.6, flangeThickness: 6}
   - Validation errors: []
 ✅ Validation passed for dstv_contour_outer_6
   - Effective depth: 12.899999999999999mm
   - Creating contour geometry with 5 points...
 ✅ Contour geometry created successfully
 ⚠️ feature.position seems incorrect (distance: 929.59mm), attempting correction
overrideMethod @ installHook.js:1
process @ ContourProcessor.ts:108
process @ FeatureProcessorFact…t=1756993033286:104
applyNormalizedFeature @ ProcessorBridge.ts?t=1756993033286:67
applyFeatureBatch @ ProcessorBridge.ts?t=1756993033286:492
await in applyFeatureBatch
buildProfileElement @ DSTVSceneBuildingSta…t=1756993033286:187
await in buildProfileElement
buildProfileElements @ DSTVSceneBuildingSta…t=1756993033286:105
process @ DSTVSceneBuildingSta…?t=1756993033286:45
await in process
(anonymous) @ ProcessingPipeline.ts:204
executeWithRetry @ ProcessingPipeline.ts:251
executeStage @ ProcessingPipeline.ts:202
await in executeStage
execute @ ProcessingPipeline.ts:113
await in execute
execute @ DSTVImportPipeline.ts?t=1756993033286:74
import @ DSTVImportAdapter.ts?t=1756993033286:18
await in import
importDSTVFile @ DSTVImportAdapter.ts?t=1756993033286:65
await in importDSTVFile
importFile @ DSTVImportAdapter.ts?t=1756993033286:210
importDSTV @ FileImporter.ts?t=1756993033286:131
await in importDSTV
importFile @ FileImporter.ts?t=1756993033286:45
handleImport @ ProfessionalViewer.t…t=1756993033286:781
handleFileChange @ ImportExportTools.tsx:54
executeDispatch @ react-dom_client.js?v=7152ab34:11940
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
processDispatchQueue @ react-dom_client.js?v=7152ab34:11976
(anonymous) @ react-dom_client.js?v=7152ab34:12396
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2701
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
<input>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
ImportExportTools @ ImportExportTools.tsx:65
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<ImportExportTools>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
Toolbar @ Toolbar.tsx:145
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<Toolbar>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
ProfessionalViewer @ ProfessionalViewer.t…=1756993033286:1389
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<ProfessionalViewer>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
DemoApp @ demo.tsx?t=1756993033286:464
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<DemoApp>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
(anonymous) @ demo.tsx?t=1756993033286:533
   - Using corrected position: _Vector3 {x: 0, y: 0, z: 0}
   - Contour positioned using feature.position: _Vector3 {x: 0, y: 0, z: 0}
   - Contour positioned at: _Vector3 {x: 0, y: 0, z: 0}
   - Contour rotation: x=0.0°, y=0.0°, z=0.0°
   - Base geometry vertices: 231
   - Performing CSG SUBTRACTION...
 🔍 CSG Debug before operation:
   - Base geometry vertices: 231
   - Base geometry boundingBox: Box3 {isBox3: true, min: _Vector3, max: _Vector3}
   - Contour geometry vertices: 36
   - Contour geometry boundingBox: null
   - Base brush position: _Vector3 {x: 0, y: 0, z: 0}
   - Contour brush position: _Vector3 {x: 0, y: 0, z: 0}
   - Distance between brushes: 0
   - Base box after translation: Box3 {isBox3: true, min: _Vector3, max: _Vector3}
   - Contour box after translation: Box3 {isBox3: true, min: _Vector3, max: _Vector3}
   - Boxes intersect: true
   - CSG operation completed
   - Result geometry vertices: 237
   - Vertices changed: 231 -> 237
 ✅ Returning modified geometry for dstv_contour_outer_6
 📊 Processing result for dstv_contour_outer_6: {success: true, hasGeometry: true, error: undefined, warning: undefined}
 ✅ ProcessorBridge: Feature processed successfully, returning new geometry with 237 vertices
 
📦 Processing priority group 900 (AK): 1 features
   🔧 Processing cut_with_notches feature dstv_cut-with-notches_5
 🔧 ProcessorBridge: Applying normalized feature dstv_cut-with-notches_5 of type cut_with_notches
 🔍 ProcessorBridge: Input geometry state: {isNull: false, isUndefined: false, hasAttributes: true, hasPositions: true, vertexCount: 237, …}
 🎯 M1002 DEBUGGING in ProcessorBridge:
   Feature type: cut_with_notches
   Feature coordinates: {x: 0, y: -11.899999999999991, z: 1456.0944444444444}
   Feature points count: 9
   Element dimensions: {length: 1912.15, width: 146.1, height: 251.4, thickness: 8.6, flangeThickness: 6}
 🚀 NEW ProcessorBridge.convertToProcessorFeature called for dstv_cut-with-notches_5
 🔄 Converting 9 points for cut_with_notches dstv_cut-with-notches_5
 🔄 Input points type: object First point: (2) [1912.15, 18.6]
 ✅ Converted points result: (9) [Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2), Array(2)]
 🔄 ProcessorBridge - Feature mapping: {featureId: 'dstv_cut-with-notches_5', featureType: 'cut_with_notches', inputCoords: {…}, outputPosition: {…}, rawFace: 'web', …}
   → WEB face: rotation (0, 0, π/2) - hole through web along X axis
 ✅ Converted feature dstv_cut-with-notches_5 type cut, using processor factory...
 📋 Feature details: {type: 'cut', id: 'dstv_cut-with-notches_5', position: _Vector3, rotation: _Euler, parameters: {…}}
 🏭 FeatureProcessorFactory.process called for type: cut, id: dstv_cut-with-notches_5
 ✅ Found processor for cut, calling process...
 
================================================================================
 🔪 CUT PROCESSOR - Feature: dstv_cut-with-notches_5
 ================================================================================
 📋 Input: {featureType: 'cut', cutType: 'partial_notches', pointsCount: 9, face: 'web', geometryVertices: 237, …}
   📐 M1002 pattern detected:
     - Points: 9
     - Profile length: 1912.15mm
     - X coordinates: [0.0, 1842.1, 1912.2]
     - Extension detected: 1912.2mm > 1912.15mm
 🎯 M1002 PATTERN DETECTED - partial notches with extension
    ➤ Set cutType to: partial_notches
 🎯 M1002 FORCED: Using PartialNotchHandler for cutType=partial_notches
 ✅ Forced handler: PartialNotchHandler for M1002 pattern
 🔧 Handler selected: PartialNotchHandler
 🔍 Cut type detected: UNRESTRICTED_CONTOUR
 🔧 PartialNotchHandler.createCutGeometry for M1002 pattern
   Points: 9
 🎯 Creating M1002 notch geometry (BASED ON WORKING ContourProcessor)
 ✅ Created M1002 notch geometry (REPLICA OF WORKING VERSION):
    Notch rectangle: 1842.15 to 1912.15 (70mm)
    Y range: 18.6 to 232.8mm
    Depth: 17.2mm
    Position: X=921.075, Y=123.7
    Rotation: X=-π/2 (same as original)
 📊 Handler result: {success: true, hasGeometry: true, error: undefined, cutVertices: 231}
 🔍 Should apply CSG for cut: true
 🔧 APPLYING CSG OPERATION
 📊 Base geometry: 237 vertices
 📊 Cut geometry: 231 vertices
 
🔧 CSG OPERATION START
    Feature: dstv_cut-with-notches_5, Type: cut
 📋 Geometry Diagnostics:
    Base: 237 vertices, normals=true
    Cut: 231 vertices, normals=true
    Base bounds: -73.1,-125.7,0.0 → 73.1,125.7,1912.2
    Cut bounds: -73.1,-125.7,0.0 → 73.1,125.7,1912.2
 ⚙️ Creating Brush objects...
 ⚙️ Performing CSG subtraction...
 📊 CSG Result Analysis:
    Result vertices: 0
    Original vertices: 237
    Difference: -237 (-100.0%)
 ❌ CRITICAL CSG ERROR: Result geometry has 0 vertices!
overrideMethod @ installHook.js:1
applyCSGOperation @ CutProcessorMigrated…t=1756993033286:266
process @ CutProcessorMigrated…t=1756993033286:126
process @ FeatureProcessorFact…t=1756993033286:104
applyNormalizedFeature @ ProcessorBridge.ts?t=1756993033286:67
applyFeatureBatch @ ProcessorBridge.ts?t=1756993033286:492
await in applyFeatureBatch
buildProfileElement @ DSTVSceneBuildingSta…t=1756993033286:187
await in buildProfileElement
buildProfileElements @ DSTVSceneBuildingSta…t=1756993033286:105
process @ DSTVSceneBuildingSta…?t=1756993033286:45
await in process
(anonymous) @ ProcessingPipeline.ts:204
executeWithRetry @ ProcessingPipeline.ts:251
executeStage @ ProcessingPipeline.ts:202
await in executeStage
execute @ ProcessingPipeline.ts:113
await in execute
execute @ DSTVImportPipeline.ts?t=1756993033286:74
import @ DSTVImportAdapter.ts?t=1756993033286:18
await in import
importDSTVFile @ DSTVImportAdapter.ts?t=1756993033286:65
await in importDSTVFile
importFile @ DSTVImportAdapter.ts?t=1756993033286:210
importDSTV @ FileImporter.ts?t=1756993033286:131
await in importDSTV
importFile @ FileImporter.ts?t=1756993033286:45
handleImport @ ProfessionalViewer.t…t=1756993033286:781
handleFileChange @ ImportExportTools.tsx:54
executeDispatch @ react-dom_client.js?v=7152ab34:11940
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
processDispatchQueue @ react-dom_client.js?v=7152ab34:11976
(anonymous) @ react-dom_client.js?v=7152ab34:12396
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2701
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
<input>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
ImportExportTools @ ImportExportTools.tsx:65
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<ImportExportTools>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
Toolbar @ Toolbar.tsx:145
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<Toolbar>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
ProfessionalViewer @ ProfessionalViewer.t…=1756993033286:1389
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<ProfessionalViewer>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
DemoApp @ demo.tsx?t=1756993033286:464
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<DemoApp>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
(anonymous) @ demo.tsx?t=1756993033286:533
 ❌ This means the cut geometry completely consumed the base geometry
overrideMethod @ installHook.js:1
applyCSGOperation @ CutProcessorMigrated…t=1756993033286:267
process @ CutProcessorMigrated…t=1756993033286:126
process @ FeatureProcessorFact…t=1756993033286:104
applyNormalizedFeature @ ProcessorBridge.ts?t=1756993033286:67
applyFeatureBatch @ ProcessorBridge.ts?t=1756993033286:492
await in applyFeatureBatch
buildProfileElement @ DSTVSceneBuildingSta…t=1756993033286:187
await in buildProfileElement
buildProfileElements @ DSTVSceneBuildingSta…t=1756993033286:105
process @ DSTVSceneBuildingSta…?t=1756993033286:45
await in process
(anonymous) @ ProcessingPipeline.ts:204
executeWithRetry @ ProcessingPipeline.ts:251
executeStage @ ProcessingPipeline.ts:202
await in executeStage
execute @ ProcessingPipeline.ts:113
await in execute
execute @ DSTVImportPipeline.ts?t=1756993033286:74
import @ DSTVImportAdapter.ts?t=1756993033286:18
await in import
importDSTVFile @ DSTVImportAdapter.ts?t=1756993033286:65
await in importDSTVFile
importFile @ DSTVImportAdapter.ts?t=1756993033286:210
importDSTV @ FileImporter.ts?t=1756993033286:131
await in importDSTV
importFile @ FileImporter.ts?t=1756993033286:45
handleImport @ ProfessionalViewer.t…t=1756993033286:781
handleFileChange @ ImportExportTools.tsx:54
executeDispatch @ react-dom_client.js?v=7152ab34:11940
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
processDispatchQueue @ react-dom_client.js?v=7152ab34:11976
(anonymous) @ react-dom_client.js?v=7152ab34:12396
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2701
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
<input>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
ImportExportTools @ ImportExportTools.tsx:65
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<ImportExportTools>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
Toolbar @ Toolbar.tsx:145
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<Toolbar>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
ProfessionalViewer @ ProfessionalViewer.t…=1756993033286:1389
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<ProfessionalViewer>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
DemoApp @ demo.tsx?t=1756993033286:464
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<DemoApp>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
(anonymous) @ demo.tsx?t=1756993033286:533
 ❌ Base vertices: 237, Cut vertices: 231
overrideMethod @ installHook.js:1
applyCSGOperation @ CutProcessorMigrated…t=1756993033286:268
process @ CutProcessorMigrated…t=1756993033286:126
process @ FeatureProcessorFact…t=1756993033286:104
applyNormalizedFeature @ ProcessorBridge.ts?t=1756993033286:67
applyFeatureBatch @ ProcessorBridge.ts?t=1756993033286:492
await in applyFeatureBatch
buildProfileElement @ DSTVSceneBuildingSta…t=1756993033286:187
await in buildProfileElement
buildProfileElements @ DSTVSceneBuildingSta…t=1756993033286:105
process @ DSTVSceneBuildingSta…?t=1756993033286:45
await in process
(anonymous) @ ProcessingPipeline.ts:204
executeWithRetry @ ProcessingPipeline.ts:251
executeStage @ ProcessingPipeline.ts:202
await in executeStage
execute @ ProcessingPipeline.ts:113
await in execute
execute @ DSTVImportPipeline.ts?t=1756993033286:74
import @ DSTVImportAdapter.ts?t=1756993033286:18
await in import
importDSTVFile @ DSTVImportAdapter.ts?t=1756993033286:65
await in importDSTVFile
importFile @ DSTVImportAdapter.ts?t=1756993033286:210
importDSTV @ FileImporter.ts?t=1756993033286:131
await in importDSTV
importFile @ FileImporter.ts?t=1756993033286:45
handleImport @ ProfessionalViewer.t…t=1756993033286:781
handleFileChange @ ImportExportTools.tsx:54
executeDispatch @ react-dom_client.js?v=7152ab34:11940
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
processDispatchQueue @ react-dom_client.js?v=7152ab34:11976
(anonymous) @ react-dom_client.js?v=7152ab34:12396
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2701
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
<input>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
ImportExportTools @ ImportExportTools.tsx:65
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<ImportExportTools>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
Toolbar @ Toolbar.tsx:145
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<Toolbar>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
ProfessionalViewer @ ProfessionalViewer.t…=1756993033286:1389
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<ProfessionalViewer>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
DemoApp @ demo.tsx?t=1756993033286:464
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<DemoApp>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
(anonymous) @ demo.tsx?t=1756993033286:533
 ❌ Feature: dstv_cut-with-notches_5, Type: cut
overrideMethod @ installHook.js:1
applyCSGOperation @ CutProcessorMigrated…t=1756993033286:269
process @ CutProcessorMigrated…t=1756993033286:126
process @ FeatureProcessorFact…t=1756993033286:104
applyNormalizedFeature @ ProcessorBridge.ts?t=1756993033286:67
applyFeatureBatch @ ProcessorBridge.ts?t=1756993033286:492
await in applyFeatureBatch
buildProfileElement @ DSTVSceneBuildingSta…t=1756993033286:187
await in buildProfileElement
buildProfileElements @ DSTVSceneBuildingSta…t=1756993033286:105
process @ DSTVSceneBuildingSta…?t=1756993033286:45
await in process
(anonymous) @ ProcessingPipeline.ts:204
executeWithRetry @ ProcessingPipeline.ts:251
executeStage @ ProcessingPipeline.ts:202
await in executeStage
execute @ ProcessingPipeline.ts:113
await in execute
execute @ DSTVImportPipeline.ts?t=1756993033286:74
import @ DSTVImportAdapter.ts?t=1756993033286:18
await in import
importDSTVFile @ DSTVImportAdapter.ts?t=1756993033286:65
await in importDSTVFile
importFile @ DSTVImportAdapter.ts?t=1756993033286:210
importDSTV @ FileImporter.ts?t=1756993033286:131
await in importDSTV
importFile @ FileImporter.ts?t=1756993033286:45
handleImport @ ProfessionalViewer.t…t=1756993033286:781
handleFileChange @ ImportExportTools.tsx:54
executeDispatch @ react-dom_client.js?v=7152ab34:11940
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
processDispatchQueue @ react-dom_client.js?v=7152ab34:11976
(anonymous) @ react-dom_client.js?v=7152ab34:12396
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2701
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
<input>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
ImportExportTools @ ImportExportTools.tsx:65
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<ImportExportTools>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
Toolbar @ Toolbar.tsx:145
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<Toolbar>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
ProfessionalViewer @ ProfessionalViewer.t…=1756993033286:1389
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<ProfessionalViewer>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
DemoApp @ demo.tsx?t=1756993033286:464
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<DemoApp>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
(anonymous) @ demo.tsx?t=1756993033286:533
 ❌ Returning original geometry to prevent piece disappearance
overrideMethod @ installHook.js:1
applyCSGOperation @ CutProcessorMigrated…t=1756993033286:270
process @ CutProcessorMigrated…t=1756993033286:126
process @ FeatureProcessorFact…t=1756993033286:104
applyNormalizedFeature @ ProcessorBridge.ts?t=1756993033286:67
applyFeatureBatch @ ProcessorBridge.ts?t=1756993033286:492
await in applyFeatureBatch
buildProfileElement @ DSTVSceneBuildingSta…t=1756993033286:187
await in buildProfileElement
buildProfileElements @ DSTVSceneBuildingSta…t=1756993033286:105
process @ DSTVSceneBuildingSta…?t=1756993033286:45
await in process
(anonymous) @ ProcessingPipeline.ts:204
executeWithRetry @ ProcessingPipeline.ts:251
executeStage @ ProcessingPipeline.ts:202
await in executeStage
execute @ ProcessingPipeline.ts:113
await in execute
execute @ DSTVImportPipeline.ts?t=1756993033286:74
import @ DSTVImportAdapter.ts?t=1756993033286:18
await in import
importDSTVFile @ DSTVImportAdapter.ts?t=1756993033286:65
await in importDSTVFile
importFile @ DSTVImportAdapter.ts?t=1756993033286:210
importDSTV @ FileImporter.ts?t=1756993033286:131
await in importDSTV
importFile @ FileImporter.ts?t=1756993033286:45
handleImport @ ProfessionalViewer.t…t=1756993033286:781
handleFileChange @ ImportExportTools.tsx:54
executeDispatch @ react-dom_client.js?v=7152ab34:11940
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
processDispatchQueue @ react-dom_client.js?v=7152ab34:11976
(anonymous) @ react-dom_client.js?v=7152ab34:12396
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2701
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
<input>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
ImportExportTools @ ImportExportTools.tsx:65
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<ImportExportTools>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
Toolbar @ Toolbar.tsx:145
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<Toolbar>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
ProfessionalViewer @ ProfessionalViewer.t…=1756993033286:1389
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<ProfessionalViewer>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
DemoApp @ demo.tsx?t=1756993033286:464
react_stack_bottom_frame @ react-dom_client.js?v=7152ab34:17678
renderWithHooks @ react-dom_client.js?v=7152ab34:4321
updateFunctionComponent @ react-dom_client.js?v=7152ab34:6759
beginWork @ react-dom_client.js?v=7152ab34:7805
runWithFiberInDEV @ react-dom_client.js?v=7152ab34:1540
performUnitOfWork @ react-dom_client.js?v=7152ab34:11059
workLoopSync @ react-dom_client.js?v=7152ab34:10916
renderRootSync @ react-dom_client.js?v=7152ab34:10898
performWorkOnRoot @ react-dom_client.js?v=7152ab34:10510
performSyncWorkOnRoot @ react-dom_client.js?v=7152ab34:11838
flushSyncWorkAcrossRoots_impl @ react-dom_client.js?v=7152ab34:11735
flushSyncWork$1 @ react-dom_client.js?v=7152ab34:10753
batchedUpdates$1 @ react-dom_client.js?v=7152ab34:2705
dispatchEventForPluginEventSystem @ react-dom_client.js?v=7152ab34:12085
dispatchEvent @ react-dom_client.js?v=7152ab34:15036
dispatchDiscreteEvent @ react-dom_client.js?v=7152ab34:15017
handleMouseUp_ @ unknown
<DemoApp>
exports.jsxDEV @ react_jsx-dev-runtime.js?v=7152ab34:256
(anonymous) @ demo.tsx?t=1756993033286:533
 ✅ Added cut metadata without CSG for feature dstv_cut-with-notches_5
 ✅ CSG operation completed
 📊 Final geometry: 237 vertices
 📊 Vertex change: 0 (0)
 📊 Processing result for dstv_cut-with-notches_5: {success: true, hasGeometry: true, error: undefined, warning: undefined}
 ✅ ProcessorBridge: Feature processed successfully, returning new geometry with 237 vertices
 
📦 Processing priority group 500 (BO): 2 features
   ⚡ Batch processing 2 BO features
     📐 Processing 2 features on face v
 🔧 ProcessorBridge: Applying normalized feature dstv_hole_2 of type hole
 🔍 ProcessorBridge: Input geometry state: {isNull: false, isUndefined: false, hasAttributes: true, hasPositions: true, vertexCount: 237, …}
 🚀 NEW ProcessorBridge.convertToProcessorFeature called for dstv_hole_2
 🔄 ProcessorBridge - Feature mapping: {featureId: 'dstv_hole_2', featureType: 'hole', inputCoords: {…}, outputPosition: {…}, rawFace: 'v', …}
   → WEB face: rotation (0, 0, π/2) - hole through web along X axis
 ✅ Converted feature dstv_hole_2 type hole, using processor factory...
 📋 Feature details: {type: 'hole', id: 'dstv_hole_2', position: _Vector3, rotation: _Euler, parameters: {…}}
 🏭 FeatureProcessorFactory.process called for type: hole, id: dstv_hole_2
 ✅ Found processor for hole, calling process...
 🔨 HoleProcessor: Processing hole for element unknown_001_M1002
   - Feature: {type: 'hole', id: 'dstv_hole_2', position: _Vector3, rotation: _Euler, coordinateSystem: 'standard', …}
   - Element dimensions: {length: 1912.15, width: 146.1, height: 251.4, thickness: 8.6, flangeThickness: 6}
   - Using standard position: (0, 37.499999999999986, 1857.15)
   - Face: web
 🎯 calculateRotationForFace called with face: web at 2025-09-04T13:48:36.126Z
   → WEB face: rotation (0, 0, π/2)
   → Hole on web face, depth=8.6mm will traverse through material
   - Calculated 3D position: {position: _Vector3, rotation: _Euler, depth: 8.6, normal: _Vector3, face: 'web'}
     → Position Vector3: 0 37.499999999999986 1857.15
     → Rotation Euler: 0 0 1.5707963267948966
   - Web face detected, webThickness: undefinedmm, using: 8.6mm
   - Hole depth from feature: 0mm (0 = through hole)
   🔩 Round hole geometry: diameter=22mm, segments=32, depth=17.2mm, face=web
   - Created round hole: diameter=22
   🔍 Hole depth calculation: feature.depth=0, zoneThickness=8.6, actualDepth=17.2, isThrough=true
   - Through hole detected (depth=0), using centered position with 17.2mm depth
   - Position: X=0, Y=37.499999999999986, Z=1857.15
   - Rotation: X=0, Y=0, Z=1.5707963267948966
   - Hole brush position: _Vector3 {x: 0, y: 37.499999999999986, z: 1857.15}
   - Hole brush rotation: _Euler {isEuler: true, _x: 0, _y: 0, _z: 1.5707963267948966, _order: 'XYZ', …}
   - Performing CSG subtraction...
   - Original vertex count: 237
   - Result vertex count: 1245
   - Vertices ADDED: 1008
 📊 Processing result for dstv_hole_2: {success: true, hasGeometry: true, error: undefined, warning: undefined}
 ✅ ProcessorBridge: Feature processed successfully, returning new geometry with 1245 vertices
 🔧 ProcessorBridge: Applying normalized feature dstv_hole_3 of type hole
 🔍 ProcessorBridge: Input geometry state: {isNull: false, isUndefined: false, hasAttributes: true, hasPositions: true, vertexCount: 1245, …}
 🚀 NEW ProcessorBridge.convertToProcessorFeature called for dstv_hole_3
 🔄 ProcessorBridge - Feature mapping: {featureId: 'dstv_hole_3', featureType: 'hole', inputCoords: {…}, outputPosition: {…}, rawFace: 'v', …}
   → WEB face: rotation (0, 0, π/2) - hole through web along X axis
 ✅ Converted feature dstv_hole_3 type hole, using processor factory...
 📋 Feature details: {type: 'hole', id: 'dstv_hole_3', position: _Vector3, rotation: _Euler, parameters: {…}}
 🏭 FeatureProcessorFactory.process called for type: hole, id: dstv_hole_3
 ✅ Found processor for hole, calling process...
 🔨 HoleProcessor: Processing hole for element unknown_001_M1002
   - Feature: {type: 'hole', id: 'dstv_hole_3', position: _Vector3, rotation: _Euler, coordinateSystem: 'standard', …}
   - Element dimensions: {length: 1912.15, width: 146.1, height: 251.4, thickness: 8.6, flangeThickness: 6}
   - Using standard position: (0, -37.5, 1857.15)
   - Face: web
PositionService.ts:514 🎯 calculateRotationForFace called with face: web at 2025-09-04T13:48:36.141Z
PositionService.ts:525   → WEB face: rotation (0, 0, π/2)
PositionService.ts:420   → Hole on web face, depth=8.6mm will traverse through material
HoleProcessor.ts:65   - Calculated 3D position: {position: _Vector3, rotation: _Euler, depth: 8.6, normal: _Vector3, face: 'web'}
HoleProcessor.ts:66     → Position Vector3: 0 -37.5 1857.15
HoleProcessor.ts:67     → Rotation Euler: 0 0 1.5707963267948966
HoleProcessor.ts:78   - Web face detected, webThickness: undefinedmm, using: 8.6mm
HoleProcessor.ts:87   - Hole depth from feature: 0mm (0 = through hole)
HoleProcessor.ts:292   🔩 Round hole geometry: diameter=22mm, segments=32, depth=17.2mm, face=web
HoleProcessor.ts:115   - Created round hole: diameter=22
HoleProcessor.ts:130   🔍 Hole depth calculation: feature.depth=0, zoneThickness=8.6, actualDepth=17.2, isThrough=true
HoleProcessor.ts:136   - Through hole detected (depth=0), using centered position with 17.2mm depth
HoleProcessor.ts:137   - Position: X=0, Y=-37.5, Z=1857.15
HoleProcessor.ts:138   - Rotation: X=0, Y=0, Z=1.5707963267948966
HoleProcessor.ts:151   - Hole brush position: _Vector3 {x: 0, y: -37.5, z: 1857.15}
HoleProcessor.ts:152   - Hole brush rotation: _Euler {isEuler: true, _x: 0, _y: 0, _z: 1.5707963267948966, _order: 'XYZ', …}
HoleProcessor.ts:159   - Performing CSG subtraction...
HoleProcessor.ts:212   - Original vertex count: 1245
HoleProcessor.ts:213   - Result vertex count: 2235
HoleProcessor.ts:214   - Vertices ADDED: 990
ProcessorBridge.ts:111 📊 Processing result for dstv_hole_3: {success: true, hasGeometry: true, error: undefined, warning: undefined}
ProcessorBridge.ts:119 ✅ ProcessorBridge: Feature processed successfully, returning new geometry with 2235 vertices
ProcessorBridge.ts:659 
📦 Processing priority group 100 (SI): 1 features
ProcessorBridge.ts:674   🔧 Processing marking feature dstv_marking_4
ProcessorBridge.ts:61 🔧 ProcessorBridge: Applying normalized feature dstv_marking_4 of type marking
ProcessorBridge.ts:64 🔍 ProcessorBridge: Input geometry state: {isNull: false, isUndefined: false, hasAttributes: true, hasPositions: true, vertexCount: 2235, …}
ProcessorBridge.ts:347 🚀 NEW ProcessorBridge.convertToProcessorFeature called for dstv_marking_4
ProcessorBridge.ts:413 📍 Marking position: X=20, Y=125.7, Z=2 on face top_flange
ProcessorBridge.ts:441 🔄 ProcessorBridge - Feature mapping: {featureId: 'dstv_marking_4', featureType: 'marking', inputCoords: {…}, outputPosition: {…}, rawFace: 'top_flange', …}
ProcessorBridge.ts:540   → TOP_FLANGE marking: rotation (-π/2, 0, 0) - text flat on top
ProcessorBridge.ts:99 ✅ Converted feature dstv_marking_4 type marking, using processor factory...
ProcessorBridge.ts:100 📋 Feature details: {type: 'marking', id: 'dstv_marking_4', position: _Vector3, rotation: _Euler, parameters: {…}}
FeatureProcessorFactory.ts:127 🏭 FeatureProcessorFactory.process called for type: marking, id: dstv_marking_4
FeatureProcessorFactory.ts:139 ✅ Found processor for marking, calling process...
MarkingProcessor.ts:73 📝 Processing marking/scribbing: "1002" at position [20, 125.7, 2] with size 10mm
MarkingProcessor.ts:77    🔄 Marking rotation provided: {x: '-90°', y: '0°', z: '0°'}
MarkingProcessor.ts:113 ✅ Marking stored for visual display
ProcessorBridge.ts:111 📊 Processing result for dstv_marking_4: {success: true, hasGeometry: true, error: undefined, warning: undefined}
ProcessorBridge.ts:119 ✅ ProcessorBridge: Feature processed successfully, returning new geometry with 2235 vertices
DSTVSceneBuildingStage.ts:281 ✅ SceneBuildingStage: Feature application completed: 132 → 2235 vertices
ProcessingContext.ts:503 [dstv-scene-building] [dstv-scene-building] Features applied successfully {originalVertices: 132, finalVertices: 2235, verticesAdded: 2103, featuresApplied: 6}
ProcessingContext.ts:503 [dstv-scene-building] [dstv-scene-building] ✅ Attached processed geometry to element unknown_001_M1002 {vertexCount: 2235, hasFeatures: true}
ProcessingContext.ts:503 [dstv-scene-building] [dstv-scene-building] Scene building completed {elementsCreated: 1, sceneId: 'dstv_scene_unknown_001_M1002_1756993716052', duration: '102.30ms'}
ProcessingContext.ts:503 [dstv-scene-building] Completed stage: dstv-scene-building {duration: '102.60ms', outputType: 'Object'}
ProcessingContext.ts:503 [dstv-scene-building] Completed stage: dstv-scene-building {duration: '103.00ms'}
ProcessingContext.ts:503 [dstv-scene-building] Pipeline execution completed: dstv-import-pipeline {duration: '123.80ms', success: true}
DSTVImportPipeline.ts:168 🎯 DSTV Import completed successfully {duration: '0.00ms', elements: 1, metadata: {…}}
ProfessionalViewer.tsx:963 📊 État actuel avant import: []
ProfessionalViewer.tsx:964 📊 Éléments à importer: [{…}]
ProfessionalViewer.tsx:977 📊 Avant import: 0 éléments
ProfessionalViewer.tsx:978 📊 Nouveaux éléments: 1
ProfessionalViewer.tsx:979 📊 Total après import: 1 éléments
ProfessionalViewer.tsx:980 📊 Nouveau tableau complet: [{…}]
ProfessionalViewer.tsx:983 📝 Mise à jour immédiate de allElements avec: [{…}]
GeometryConverter.ts:23 ✅ Using existing geometry for unknown_001_M1002 (vertices: 2235)
FeatureOutlineRenderer.ts:100 🔍 FeatureOutlineRenderer processing element unknown_001_M1002_1756993716156_0:
FeatureOutlineRenderer.ts:101   📊 Geometry userData: {hasUserData: true, holes: 2, cuts: 1, userDataKeys: Array(4)}
FeatureOutlineRenderer.ts:113 🔵 Creating outlines - Mesh yOffset: 125.69999694824219
FeatureOutlineRenderer.ts:363 🔵 Hole outline depth calculation: {hole_depth: 8.6, hole_thickness: undefined, final_depth: 8.6, face: 'web'}
FeatureOutlineRenderer.ts:379 🔵 Creating hole outline 0: {position: Array(3), originalPosition: Array(3), originalDSTVCoords: undefined, rotation: _Euler, diameter: 22, …}
FeatureOutlineRenderer.ts:525   -> Ring 1 at: [-4.3, 163.1999969482422, 1857.15] (rounded: [-4.3, 163.2, 1857.2])
FeatureOutlineRenderer.ts:525   -> Ring 2 at: [4.3, 163.1999969482422, 1857.15] (rounded: [4.3, 163.2, 1857.2])
FeatureOutlineRenderer.ts:363 🔵 Hole outline depth calculation: {hole_depth: 8.6, hole_thickness: undefined, final_depth: 8.6, face: 'web'}
FeatureOutlineRenderer.ts:379 🔵 Creating hole outline 1: {position: Array(3), originalPosition: Array(3), originalDSTVCoords: undefined, rotation: _Euler, diameter: 22, …}
FeatureOutlineRenderer.ts:525   -> Ring 1 at: [-4.3, 88.19999694824219, 1857.15] (rounded: [-4.3, 88.2, 1857.2])
FeatureOutlineRenderer.ts:525   -> Ring 2 at: [4.3, 88.19999694824219, 1857.15] (rounded: [4.3, 88.2, 1857.2])
FeatureOutlineRenderer.ts:1086 🔵 Creating cut outline 0: {id: 'dstv_cut-with-notches_5', type: 'notch', face: 'web', bounds: {…}, contourPoints: Array(9), …}
FeatureOutlineRenderer.ts:1232   -> Cut outline at: [0.0, 125.7, 0.0]
FeatureOutlineRenderer.ts:1233   -> Dimensions: 0.0 x 0.0 x 0.0
FeatureOutlineRenderer.ts:1234   -> Type: notch, Color: 0xff8800
FeatureOutlineRenderer.ts:334 📋 Created outlines for element unknown_001_M1002_1756993716156_0: {totalOutlines: 3, featureIds: Array(3), elementFeatures: Array(6)}
SceneManager.ts:330 ✨ Added 3 feature outlines for unknown_001_M1002
SceneManager.ts:336 📝 Processing markings for visual display: [{…}]
MarkingVisualProcessor.ts:112    📐 Element type detection - materialType: beam, type: undefined, dims.profileType: undefined
MarkingVisualProcessor.ts:146    📍 TOP FLANGE marking: DSTV[20, 125.7] -> Three.js[125.7, 125.8, 20.0]
MarkingVisualProcessor.ts:173    📍 Face: top_flange, Dimensions: L=1912.15, H=251.4, W=146.1
MarkingVisualProcessor.ts:272    🔄 Checking marking rotation: {hasRotation: true, isArray: true, rotation: Array(3)}
MarkingVisualProcessor.ts:284    🔄 Using provided rotation: X=-90.0°, Y=0.0°, Z=0.0°
MarkingVisualProcessor.ts:83 📝 Created marking visual: "1002" at position [125.7, 125.8, 20.0]
SceneManager.ts:344 ✅ Added 1 marking visual(s) to element
demo.tsx:165 Elements sélectionnés: ['unknown_001_M1002_1756993716156_0']
ProfessionalViewer.tsx:1022 ✅ Import réussi: 1 éléments ajoutés
ProfessionalViewer.tsx:81 📊 allElements a changé: 1 éléments
ProfessionalViewer.tsx:82 📊 Contenu: [{…}]
GeometryConverter.ts:23 ✅ Using existing geometry for unknown_001_M1002 (vertices: 2235)
FeatureOutlineRenderer.ts:100 🔍 FeatureOutlineRenderer processing element unknown_001_M1002_1756993716156_0:
FeatureOutlineRenderer.ts:101   📊 Geometry userData: {hasUserData: true, holes: 2, cuts: 1, userDataKeys: Array(4)}
FeatureOutlineRenderer.ts:113 🔵 Creating outlines - Mesh yOffset: 125.69999694824219
FeatureOutlineRenderer.ts:363 🔵 Hole outline depth calculation: {hole_depth: 8.6, hole_thickness: undefined, final_depth: 8.6, face: 'web'}
FeatureOutlineRenderer.ts:379 🔵 Creating hole outline 0: {position: Array(3), originalPosition: Array(3), originalDSTVCoords: undefined, rotation: _Euler, diameter: 22, …}
FeatureOutlineRenderer.ts:525   -> Ring 1 at: [-4.3, 163.1999969482422, 1857.15] (rounded: [-4.3, 163.2, 1857.2])
FeatureOutlineRenderer.ts:525   -> Ring 2 at: [4.3, 163.1999969482422, 1857.15] (rounded: [4.3, 163.2, 1857.2])
FeatureOutlineRenderer.ts:363 🔵 Hole outline depth calculation: {hole_depth: 8.6, hole_thickness: undefined, final_depth: 8.6, face: 'web'}
FeatureOutlineRenderer.ts:379 🔵 Creating hole outline 1: {position: Array(3), originalPosition: Array(3), originalDSTVCoords: undefined, rotation: _Euler, diameter: 22, …}
FeatureOutlineRenderer.ts:525   -> Ring 1 at: [-4.3, 88.19999694824219, 1857.15] (rounded: [-4.3, 88.2, 1857.2])
FeatureOutlineRenderer.ts:525   -> Ring 2 at: [4.3, 88.19999694824219, 1857.15] (rounded: [4.3, 88.2, 1857.2])
FeatureOutlineRenderer.ts:1086 🔵 Creating cut outline 0: {id: 'dstv_cut-with-notches_5', type: 'notch', face: 'web', bounds: {…}, contourPoints: Array(9), …}
FeatureOutlineRenderer.ts:1232   -> Cut outline at: [0.0, 125.7, 0.0]
FeatureOutlineRenderer.ts:1233   -> Dimensions: 0.0 x 0.0 x 0.0
FeatureOutlineRenderer.ts:1234   -> Type: notch, Color: 0xff8800
FeatureOutlineRenderer.ts:334 📋 Created outlines for element unknown_001_M1002_1756993716156_0: {totalOutlines: 3, featureIds: Array(3), elementFeatures: Array(6)}
SceneManager.ts:330 ✨ Added 3 feature outlines for unknown_001_M1002
SceneManager.ts:336 📝 Processing markings for visual display: [{…}]
MarkingVisualProcessor.ts:112    📐 Element type detection - materialType: beam, type: undefined, dims.profileType: undefined
MarkingVisualProcessor.ts:146    📍 TOP FLANGE marking: DSTV[20, 125.7] -> Three.js[125.7, 125.8, 20.0]
MarkingVisualProcessor.ts:173    📍 Face: top_flange, Dimensions: L=1912.15, H=251.4, W=146.1
MarkingVisualProcessor.ts:272    🔄 Checking marking rotation: {hasRotation: true, isArray: true, rotation: Array(3)}
MarkingVisualProcessor.ts:284    🔄 Using provided rotation: X=-90.0°, Y=0.0°, Z=0.0°
MarkingVisualProcessor.ts:83 📝 Created marking visual: "1002" at position [125.7, 125.8, 20.0]
SceneManager.ts:344 ✅ Added 1 marking visual(s) to element
ControlsManager.ts:669 🔍 Limites zoom: 200mm ↔ 4500mm
