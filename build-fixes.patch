// Patch pour corriger les erreurs de build

// 1. Ajouter la méthode normalizePoints dans CutCategoryDetector après la ligne 41
private normalizePoints(points: Array<[number, number] | { x: number; y: number }>): Array<[number, number]> {
  return points.map(p => {
    if (Array.isArray(p)) {
      return p;
    } else {
      return [p.x, p.y] as [number, number];
    }
  });
}

// 2. Dans CutCategoryDetector, utiliser normalizePoints avant chaque appel de méthode qui attend [number, number][]
// Remplacer tous les appels directs à this.isInteriorCut(contourPoints, ...) par:
const normalizedPoints = this.normalizePoints(contourPoints);
if (this.isInteriorCut(normalizedPoints, element)) {

// 3. Pour les propriétés manquantes dans FeatureParameters, utiliser des casts:
(params as any).weldPreparation
(params as any).rawData
(params as any).bevelDistance
(params as any).rootFace
(params as any).rootGap

// 4. Pour les conflits de getDummyElement dans les stratégies, renommer la méthode dans les classes dérivées:
// Remplacer private getDummyElement() par:
protected createDummyElement()

// 5. Pour les erreurs de cast PivotElement, ajouter les propriétés manquantes:
name: profile.id || 'dummy',
materialType: MaterialType.STEEL,
scale: [1, 1, 1] as [number, number, number],
material: { color: '#808080' },
visible: true

// 6. Pour DSTVFaceMapper, changer le type de la Map pour être plus générique:
private readonly faceMapping: Map<string, Map<string, ProfileFace>> = new Map([

// 7. Pour profileName qui n'existe pas sur PivotElement:
const profileName = element.metadata?.profileName || '';